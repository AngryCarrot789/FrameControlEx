<views:WindowEx x:Class="FrameControlEx.Views.Main.FrameControlWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:local="clr-namespace:FrameControlEx"
                xmlns:views="clr-namespace:FrameControlEx.Views"
                xmlns:helpers="clr-namespace:FrameControlEx.Controls.Helpers"
                xmlns:converters="clr-namespace:FrameControlEx.Converters"
                xmlns:acs="clr-namespace:FrameControlEx.AdvancedContextService"
                xmlns:wpf="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
                xmlns:controls="clr-namespace:FrameControlEx.Scenes.Controls"
                xmlns:controls1="clr-namespace:FrameControlEx.Controls"
                xmlns:frameControl="clr-namespace:FrameControlEx.Core.FrameControl;assembly=FrameControlEx.Core"
                xmlns:sources="clr-namespace:FrameControlEx.Core.FrameControl.Scene.Sources;assembly=FrameControlEx.Core"
                xmlns:scene="clr-namespace:FrameControlEx.Core.FrameControl.Scene;assembly=FrameControlEx.Core"
                xmlns:outputs="clr-namespace:FrameControlEx.Core.FrameControl.Scene.Outputs;assembly=FrameControlEx.Core"
                xmlns:core="clr-namespace:FrameControlEx.Core;assembly=FrameControlEx.Core"
                mc:Ignorable="d"
                Title="MainWindow" Height="624" Width="1024"
                TitlebarBrush="{DynamicResource AREghZyBrush.Tone4.Border.Static}"
                Style="{DynamicResource CustomWindowStyleEx}"
                d:DataContext="{d:DesignInstance frameControl:FrameControlViewModel}">
    <Window.Resources>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibleConverter"/>
    </Window.Resources>
    <DockPanel>
        <Border DockPanel.Dock="Top" IsHitTestVisible="True" Background="{DynamicResource AREghZyBrush.Tone4.Border.Static}" VerticalAlignment="Top">
            <Menu HorizontalAlignment="Left" IsHitTestVisible="True">
                <MenuItem Header="View">
                    <MenuItem x:Name="ShowActivityBarMenuItem" IsCheckable="True" IsChecked="True" Header="Show Activity Bar (on the bottom)"/>
                </MenuItem>
            </Menu>
        </Border>
        <Border Visibility="{Binding ElementName=ShowActivityBarMenuItem, Path=IsChecked, Converter={StaticResource BoolToVisibleConverter}}" Background="{DynamicResource AREghZyBrush.Tone4.Border.Static}" 
                Height="20" VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
            <DockPanel>
                <ToggleButton IsChecked="{Binding UsePrecisionTimingMode, Mode=TwoWay}"
                              Content="P" VerticalAlignment="Stretch" HorizontalAlignment="Right" 
                              DockPanel.Dock="Right" Margin="5,0,0,0" BorderThickness="0" Width="22" 
                              Background="{DynamicResource AREghZyBrush.Tone4.Background.Static}"
                              ToolTipService.ShowDuration="40000">
                    <ToggleButton.ToolTip>
                        <TextBlock TextWrapping="Wrap">
                            <Run Text="Whether to use precision timing or not"/>
                            <LineBreak/>
                            <Run Text="Precision timing will generally use a lot more CPU, but will result in timings of ±0.2 fps"/>
                            <LineBreak/>
                            <Run Text="Non-precision will just use the thread sleep() function, which can generally only sleep for a minimum of 16.4ms (on windows), so achieving 60 fps may be hard without precision timing"/>
                        </TextBlock>
                    </ToggleButton.ToolTip>
                    <ToggleButton.Style>
                        <Style TargetType="{x:Type ToggleButton}">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                            <Setter Property="Foreground" Value="{DynamicResource Button.Static.Foreground}" />
                            <Setter Property="BorderThickness" Value="0"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                            <Setter Property="Padding" Value="1"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                                                BorderThickness="{TemplateBinding BorderThickness}"
                                                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Background" TargetName="border" Value="{DynamicResource Button.Disabled.Background}"/>
                                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource Button.Disabled.Foreground}"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="Background" TargetName="border" Value="#FF00B965"/>
                                            </Trigger>
                                            <Trigger Property="IsChecked" Value="False">
                                                <Setter Property="Background" TargetName="border" Value="#FFD92039"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ToggleButton.Style>
                </ToggleButton>
                <TextBlock x:Name="ActivityBarTextBlock" TextTrimming="CharacterEllipsis"/>
                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Right" x:Name="AverageTime" DockPanel.Dock="Right"/>
            </DockPanel>
        </Border>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="172" x:Name="Row0"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="250" x:Name="Col0"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid x:Name="SettingsPanel" d:DataContext="{d:DesignInstance sources:LoopbackSourceViewModel}" Background="{DynamicResource AREghZyBrush.Tone2.Background.Static}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <ContentPresenter Content="{Binding}">
                            <ContentPresenter.Resources>
                                <DataTemplate DataType="{x:Type frameControl:FrameControlViewModel}">
                                </DataTemplate>
                                <!-- INPUTS -->
                                <DataTemplate DataType="{x:Type scene:SceneViewModel}">
                                    <controls:SceneSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type sources:ImageSourceViewModel}">
                                    <controls:ImageSourceSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type sources:LoopbackSourceViewModel}">
                                    <controls:SIInputSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type sources:MMFAVSourceViewModel}">
                                    <controls:MMFSourceSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type sources:SceneSourceViewModel}">
                                    <controls:SceneSourceSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <!-- OUTPUTS -->
                                <DataTemplate DataType="{x:Type outputs:BasicBufferOutputViewModel}">
                                    <controls:SIOutputSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type outputs:FFmpegOutputViewModel}">
                                    <controls:FFmpegOutputSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type outputs:MMFAVOutputViewModel}">
                                    <controls:MMFOutputSettingsControl DataContext="{Binding}"/>
                                </DataTemplate>
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </ScrollViewer>
                </Grid>
                <Border Background="{DynamicResource AREghZyBrush.Tone1.Background.Static}" Grid.Column="2">
                    <Viewbox>
                        <AdornerDecorator x:Name="SelectionAdornerDecorator">
                            <Grid>
                                <Grid.Resources>
                                    <converters:BoolToVisibilityConverter x:Key="Converter"/>
                                </Grid.Resources>
                                <wpf:SKElement Width="{Binding Source={x:Static core:IoC.Settings}, Path=ActiveSettings.Width, FallbackValue=500}"
                                               Height="{Binding Source={x:Static core:IoC.Settings}, Path=ActiveSettings.Height, FallbackValue=500}"
                                               x:Name="ViewPortElement" PaintSurface="ViewPortElement_OnPaintSurface"/>
                                <Image Source="/FrameControlEx;component/Resources/64ll02.png" Stretch="Fill" Visibility="{Binding SceneDeck.IsEmpty, Converter={StaticResource Converter}}"/>
                            </Grid>
                        </AdornerDecorator>
                    </Viewbox>
                </Border>
                <Border Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource AREghZyBrush.Tone4.Border.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True"/>
                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                              Margin="-3,0,-5,0"
                              helpers:GridLatchSplitter.IsEnabled="True"
                              helpers:GridLatchSplitter.ClosedSize="0"
                              helpers:GridLatchSplitter.TargetColumn="{Binding ElementName=Col0}"
                              helpers:GridLatchSplitter.MinimumSize="150"
                              helpers:GridLatchSplitter.MaximumSize="600"
                              helpers:GridLatchSplitter.ThresholdSizeToClose="40"
                              helpers:GridLatchSplitter.ThresholdSizeToOpen="80"/>
            </Grid>
            <Grid Grid.Row="1" UseLayoutRounding="True" SnapsToDevicePixels="True" Grid.RowSpan="2" Background="{DynamicResource AREghZyBrush.Tone4.Border.Static}">
                <Grid.Resources>
                    <converters:NullToBoolConverter x:Key="NullToDisabledConverter"/>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"/>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="5*"/>
                </Grid.ColumnDefinitions>
                <GroupBox DataContext="{Binding SceneDeck, Mode=OneTime}" Grid.Column="0" Style="{DynamicResource NoBorderGroupBox}" Background="{DynamicResource AREghZyBrush.Tone4.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Border.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True" Focusable="True" ToolTip="Scenes are used to group together multiple input sources. They do not group output sources">
                    <GroupBox.Header>
                        <TextBlock Text="Scenes"/>
                    </GroupBox.Header>
                    <UIElement.InputBindings>
                        <KeyBinding Modifiers="Control" Key="OemPlus" Command="{Binding AddCommand, Mode=OneTime}"/>
                        <KeyBinding Key="Delete" Command="{Binding RemoveSelectedCommand, Mode=OneTime}"/>
                        <KeyBinding Modifiers="Shift" Key="Left" Command="{Binding MoveSelectedUpCommand, Mode=OneTime}"/>
                        <KeyBinding Modifiers="Shift" Key="Right" Command="{Binding MoveSelectedDownCommand, Mode=OneTime}"/>
                    </UIElement.InputBindings>
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="5*"/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition Width="8*"/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition Width="5*"/>
                        </Grid.ColumnDefinitions>
                        <Grid Background="{DynamicResource AREghZyBrush.Tone2.Background.Static}">
                            <ListBox ItemsSource="{Binding Items, Mode=OneTime}"
                                     SelectedItem="{Binding PrimarySelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                     Margin="0,0,0,26" Background="Transparent" BorderThickness="0"
                                     acs:AdvancedContextMenu.ContextGenerator="{x:Static scene:SceneContextMenuGenerator.Instance}"
                                     SelectionChanged="OnSceneSourceOrOutputSelectionChanged"
                                     GotFocus="ListBox_GotFocus"
                                     helpers:ListBoxHelper.SelectedItems="{Binding SelectedItems}"
                                     helpers:ListBoxHelper.UpdateSelectedItemsOnChange="True"
                                     SelectionMode="Extended"
                                     HorizontalContentAlignment="Stretch">
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
                                        <Setter Property="Padding" Value="1"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Border x:Name="PART_Border">
                                            <DockPanel HorizontalAlignment="Stretch">
                                                <TextBlock Text="{Binding ReadableName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" VerticalAlignment="Center"
                                                           Margin="4,1"/>
                                                <Path x:Name="optionMark"
                                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                                      Fill="{DynamicResource OptionMark.Static.Glyph}"
                                                      Stretch="None"
                                                      Margin="4,1,3,1"
                                                      VerticalAlignment="Center" HorizontalAlignment="Right" DockPanel.Dock="Right"
                                                      Width="11" Height="10"
                                                      Visibility="{Binding IsActive, Converter={StaticResource BoolToVisibleConverter}}"/>
                                            </DockPanel>
                                        </Border>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                            <Border VerticalAlignment="Bottom" Height="26" Background="{DynamicResource AREghZyBrush.Tone3.Background.Static}" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Background.Static}" BorderThickness="0,1,0,1">
                                <StackPanel Orientation="Horizontal">
                                    <Button Command="{Binding AddCommand, Mode=OneTime}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                        <TextBlock Text="+" FontSize="20" Margin="0,-5,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                    </Button>
                                    <Button Command="{Binding RemoveSelectedCommand, Mode=OneTime}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                        <TextBlock Text="-" FontSize="20" Margin="0,-5,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                    </Button>
                                    <Button Command="{Binding MoveSelectedUpCommand, Mode=OneTime}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                        <TextBlock Text="↑" FontSize="18" Margin="0,-3,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                    </Button>
                                    <Button Command="{Binding MoveSelectedDownCommand, Mode=OneTime}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                        <TextBlock Text="↓" FontSize="18" Margin="0,-3,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                    </Button>
                                </StackPanel>
                            </Border>
                        </Grid>
                        <Border DataContext="{Binding PrimarySelectedItem}" IsEnabled="{Binding Converter={StaticResource NullToDisabledConverter}}" Grid.Column="2" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Border.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True"  Focusable="True" ToolTip="Inputs (aka sources) are the 'sources' of video and audio data (e.g. desktop capture, network video, etc)">
                            <Grid>
                                <Grid.Resources>
                                    <converters:BoolConverter x:Key="RenderOrderToTextConverter" TrueValue="↑" FalseValue="↓"/>
                                </Grid.Resources>
                                <Label Content="Inputs (aka sources)" VerticalAlignment="Top" Padding="5,0" VerticalContentAlignment="Center" Height="20" Margin="0,0,20,0"/>
                                <ToggleButton IsChecked="{Binding IsRenderOrderReversed, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Right" VerticalAlignment="Top" Width="20" Height="20" Background="{DynamicResource AREghZyBrush.Tone6.Background.Static}"
                                              ToolTip="Flips the order in which the sources are rendered. By default, they are rendered top to bottom, meaning the last item is rendered last and the top item is rendered first. Flipping the direction will render bottom to top" ToolTipService.ShowDuration="40000" BorderBrush="{DynamicResource AREghZyBrush.Tone6.Border.Static}">
                                    <TextBlock Text="{Binding IsRenderOrderReversed, Converter={StaticResource RenderOrderToTextConverter}}" FontSize="18" Margin="0,-5,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                </ToggleButton>
                                <Grid DataContext="{Binding SourceDeck}" Background="{DynamicResource AREghZyBrush.Tone2.Background.Static}" x:Name="ThingGrid" Margin="0,20,0,0">
                                    <ListBox ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                             SelectedItem="{Binding PrimarySelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                             Margin="0,0,0,26" Background="Transparent" BorderThickness="0"
                                             x:Name="SourcesListBox"
                                             ItemTemplateSelector="{StaticResource IoItemTemplateSelector}"
                                             acs:AdvancedContextMenu.ContextGenerator="{x:Static scene:SourceContextGenerator.Instance}"
                                             SelectionChanged="OnSceneSourceOrOutputSelectionChanged"
                                             GotFocus="ListBox_GotFocus"
                                             helpers:ListBoxHelper.SelectedItems="{Binding SelectedItems}"
                                             helpers:ListBoxHelper.UpdateSelectedItemsOnChange="True"
                                             SelectionMode="Extended">
                                    </ListBox>
                                    <Border VerticalAlignment="Bottom" Height="26" Background="{DynamicResource AREghZyBrush.Tone3.Background.Static}" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Background.Static}" BorderThickness="0,1,0,1">
                                        <StackPanel Orientation="Horizontal">
                                            <Menu Background="Transparent" BorderBrush="Transparent" Width="24" Panel.ZIndex="2">
                                                <MenuItem Height="24" Width="24">
                                                    <MenuItem.Header>
                                                        <TextBlock Text="+" FontSize="20" Margin="-2,-5,0,0"/>
                                                    </MenuItem.Header>
                                                    <MenuItem Header="Image" Command="{Binding AddImageCommand, Mode=OneTime}"/>
                                                    <MenuItem Header="MemMapFile" Command="{Binding AddMemMapFileCommand, Mode=OneTime}"/>
                                                    <MenuItem Header="Scene Render" Command="{Binding AddSceneSourceCommand, Mode=OneTime}"/>
                                                    <Separator/>
                                                    <MenuItem Header="Output Loopback" InputGestureText="Debug Feature" Command="{Binding AddLoopbackInputCommand, Mode=OneTime}"/>
                                                </MenuItem>
                                            </Menu>
                                            <Button Command="{Binding RemoveSelectedCommand}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                                <TextBlock Text="-" FontSize="20" Margin="0,-5,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                            </Button>
                                            <Button Command="{Binding MoveSelectedUpCommand}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                                <TextBlock Text="↑" FontSize="18" Margin="0,-3,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                            </Button>
                                            <Button Command="{Binding MoveSelectedDownCommand}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                                <TextBlock Text="↓" FontSize="18" Margin="0,-3,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                            </Button>
                                        </StackPanel>
                                    </Border>
                                </Grid>
                            </Grid>
                        </Border>
                        <Border DataContext="{Binding PrimarySelectedItem}" IsEnabled="{Binding Converter={StaticResource NullToDisabledConverter}}" Grid.Column="4" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Border.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True"  Focusable="True">
                            <Grid>
                                <Label Content="Audio Mixer (Coming Soon)" VerticalAlignment="Top" Padding="5,0" VerticalContentAlignment="Center" Height="20"/>
                                <Grid Background="{DynamicResource AREghZyBrush.Tone2.Background.Static}" Margin="0,20,0,0" IsEnabled="False">
                                    <TextBlock Text="Audio is not implemented yet" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Border>
                        <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Margin="-3,0"/>
                        <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Margin="-3,0"/>
                        <Border Grid.Column="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource AREghZyBrush.Tone4.Background.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,20,0,0"/>
                    </Grid>
                </GroupBox>
                <GroupBox DataContext="{Binding OutputDeck}" Grid.Column="2" Style="{DynamicResource NoBorderGroupBox}" Header="Outputs" Background="{DynamicResource AREghZyBrush.Tone4.Border.Static}" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Border.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True"  Focusable="True">
                    <Grid Background="{DynamicResource AREghZyBrush.Tone2.Background.Static}">
                        <ListBox ItemsSource="{Binding Items, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                 SelectedItem="{Binding PrimarySelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 Margin="0,0,0,26" Background="Transparent" BorderThickness="0"
                                 ItemTemplateSelector="{StaticResource IoItemTemplateSelector}"
                                 acs:AdvancedContextMenu.ContextGenerator="{x:Static scene:OutputContextGenerator.Instance}"
                                 SelectionChanged="OnSceneSourceOrOutputSelectionChanged"
                                 GotFocus="ListBox_GotFocus"
                                 helpers:ListBoxHelper.SelectedItems="{Binding SelectedItems}"
                                 helpers:ListBoxHelper.UpdateSelectedItemsOnChange="True"
                                 SelectionMode="Extended">
                        </ListBox>
                        <Border VerticalAlignment="Bottom" Height="26" Background="{DynamicResource AREghZyBrush.Tone3.Background.Static}" BorderBrush="{DynamicResource AREghZyBrush.Tone4.Background.Static}" BorderThickness="0,1,0,1">
                            <StackPanel Orientation="Horizontal">
                                <Menu Background="Transparent" BorderBrush="Transparent" Width="24" Panel.ZIndex="2">
                                    <MenuItem Height="24" Width="24">
                                        <MenuItem.Header>
                                            <TextBlock Text="+" FontSize="20" Margin="-2,-5,0,0"/>
                                        </MenuItem.Header>
                                        <MenuItem Header="Add FFmpeg Output" Command="{Binding AddFFmpegOutputCommand, Mode=OneTime}"/>
                                        <MenuItem Header="Add Memory-Mapped File Output" Command="{Binding AddMMFCommand, Mode=OneTime}"/>
                                        <Separator/>
                                        <MenuItem Header="Add Buffered Output" InputGestureText="Debug Feature" Command="{Binding AddBufferedOutputCommand, Mode=OneTime}"/>
                                    </MenuItem>
                                </Menu>
                                <Button Command="{Binding RemoveSelectedCommand}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                    <TextBlock Text="-" FontSize="20" Margin="0,-5,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                </Button>
                                <Button Command="{Binding MoveSelectedUpCommand}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                    <TextBlock Text="↑" FontSize="18" Margin="0,-3,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                </Button>
                                <Button Command="{Binding MoveSelectedDownCommand}" Background="Transparent" BorderBrush="Transparent" Width="24">
                                    <TextBlock Text="↓" FontSize="18" Margin="0,-3,0,0" UseLayoutRounding="False" SnapsToDevicePixels="False"/>
                                </Button>
                            </StackPanel>
                        </Border>
                    </Grid>
                </GroupBox>
                <!--
                <Border Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource AREghZyBrush.Tone4.Background.Static}" UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="0,52,0,0"/>
                -->
                <GridSplitter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Grid.Column="1" Margin="-3,0"/>
            </Grid>
            <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" Margin="0,-5,0,-8"
                          helpers:GridLatchSplitter.IsEnabled="True"
                          helpers:GridLatchSplitter.ClosedSize="0"
                          helpers:GridLatchSplitter.TargetRow="{Binding ElementName=Row0}"
                          helpers:GridLatchSplitter.MinimumSize="150"
                          helpers:GridLatchSplitter.MaximumSize="400"
                          helpers:GridLatchSplitter.ThresholdSizeToClose="80"
                          helpers:GridLatchSplitter.ThresholdSizeToOpen="120"/>
        </Grid>
    </DockPanel>
</views:WindowEx>